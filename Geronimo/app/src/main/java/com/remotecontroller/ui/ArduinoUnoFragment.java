package com.remotecontroller.ui;import android.app.Dialog;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.ImageButton;import android.widget.LinearLayout;import android.widget.PopupMenu;import android.widget.RadioButton;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.fragment.app.Fragment;import com.remotecontroller.R;import com.remotecontroller.arduino.Arduino;import com.remotecontroller.arduino.ArduinoUno;import com.remotecontroller.arduino.PinMode;import com.remotecontroller.arduino.PinType;public class ArduinoUnoFragment extends Fragment {    View fragment;    Arduino arduino = new ArduinoUno();    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);    }    @Override    public View onCreateView(            @NonNull LayoutInflater inflater, ViewGroup container,            Bundle savedInstanceState) {        fragment = inflater.inflate(R.layout.arduino_uno_fragment, container, false);        addAnalogPins(inflater);        addDownDigitalPins(inflater);        addTopDigitalPins(inflater);        return fragment;    }    private void addAnalogPins(LayoutInflater inflater){        LinearLayout ll_a_pins = fragment.findViewById(R.id.ll_a_pins);        for (int i=0;i<6;i++){            ImageButton pin = (ImageButton) inflater.inflate(R.layout.pin_button,ll_a_pins,false);            int finalI = i;            pin.setOnClickListener(view -> {                final PopupMenu popupMenu = new PopupMenu(fragment.getContext(),pin);                popupMenu.inflate(R.menu.pin_popupmenu);                popupMenu.setOnMenuItemClickListener(item -> {                    switch (item.getItemId()){                        case R.id.pinmode:                            showPinmode(PinType.A, finalI);                            return true;                        case R.id.set_pin:                            showSetPin(PinType.A, finalI);                            return true;                        case R.id.read_pin:                            Toast.makeText(getContext(),String.valueOf(arduino.readPin(PinType.A, finalI)),Toast.LENGTH_LONG).show();                            return true;                        default:                            return false;                    }                });                popupMenu.show();            });            ll_a_pins.addView(pin);        }    }    private void addDownDigitalPins(LayoutInflater inflater){        LinearLayout ll_d_d_pins = fragment.findViewById(R.id.ll_d_d_pins);        for (int i=0;i<8;i++){            ImageButton pin = (ImageButton) inflater.inflate(R.layout.pin_button,ll_d_d_pins,false);            int finalI = i;            pin.setOnClickListener(view -> {                final PopupMenu popupMenu = new PopupMenu(fragment.getContext(),pin);                popupMenu.inflate(R.menu.pin_popupmenu);                popupMenu.setOnMenuItemClickListener(item -> {                    switch (item.getItemId()){                        case R.id.pinmode:                            showPinmode(PinType.D, finalI);                            return true;                        case R.id.set_pin:                            showSetPin(PinType.D, finalI);                            return true;                        case R.id.read_pin:                            Toast.makeText(getContext(),String.valueOf(arduino.readPin(PinType.D, finalI)),Toast.LENGTH_LONG).show();                            return true;                        default:                            return false;                    }                });                popupMenu.show();            });            ll_d_d_pins.addView(pin);        }    }    private void addTopDigitalPins(LayoutInflater inflater){        LinearLayout ll_d_t_pins = fragment.findViewById(R.id.ll_d_t_pins);        for (int i=8;i<14;i++){            ImageButton pin = (ImageButton) inflater.inflate(R.layout.pin_button,ll_d_t_pins,false);            int finalI = i;            pin.setOnClickListener(view -> {                final PopupMenu popupMenu = new PopupMenu(fragment.getContext(),pin);                popupMenu.inflate(R.menu.pin_popupmenu);                popupMenu.setOnMenuItemClickListener(item -> {                    switch (item.getItemId()){                        case R.id.pinmode:                            showPinmode(PinType.D, finalI);                            return true;                        case R.id.set_pin:                            showSetPin(PinType.D, finalI);                            return true;                        case R.id.read_pin:                            Toast.makeText(getContext(),String.valueOf(arduino.readPin(PinType.D, finalI)),Toast.LENGTH_LONG).show();                            return true;                        default:                            return false;                    }                });                popupMenu.show();            });            ll_d_t_pins.addView(pin);        }    }    private void showPinmode(PinType type, int nom){        Dialog pinmodeDialog = new Dialog(fragment.getContext());         //диалог получения данных о песне        pinmodeDialog.setContentView(R.layout.pinmode_dialog);        RadioButton rb_input = pinmodeDialog.findViewById(R.id.rb_input);        RadioButton rb_output = pinmodeDialog.findViewById(R.id.rb_output);        RadioButton rb_input_pullup = pinmodeDialog.findViewById(R.id.rb_input_pullup);        Button add = pinmodeDialog.findViewById(R.id.send_button);        add.setOnClickListener(v -> {            if (rb_input.isChecked())                arduino.pinmode(type,nom,PinMode.INPUT);            else if (rb_output.isChecked())                arduino.pinmode(type,nom,PinMode.OUTPUT);            else if (rb_input_pullup.isChecked())                arduino.pinmode(type,nom,PinMode.INPUT_PULLUP);            else                return;            pinmodeDialog.dismiss();        });        pinmodeDialog.show();    }    private void showSetPin(PinType type, int nom){        Dialog setPinDialog = new Dialog(fragment.getContext());         //диалог получения данных о песне        setPinDialog.setContentView(R.layout.set_pin_dialog);        RadioButton rb_5 = setPinDialog.findViewById(R.id.rb_5);        RadioButton rb_0 = setPinDialog.findViewById(R.id.rb_0);        Button add = setPinDialog.findViewById(R.id.send_button);        add.setOnClickListener(v -> {            if (rb_5.isChecked())                arduino.setPin(type,nom,5);            else if (rb_0.isChecked())                arduino.setPin(type,nom,0);            else                return;            setPinDialog.dismiss();        });        setPinDialog.show();    }}